#!/usr/bin/env python3
"""
Script para criar tasks detalhadas no Task Master
para o planejamento completo de enriquecimento
"""

import os
import sys
import json
from pathlib import Path
from datetime import datetime

# Adicionar o diret√≥rio raiz ao path
sys.path.append(str(Path(__file__).parent.parent.parent.parent.parent))

def create_enrichment_tasks():
    """Criar tasks detalhadas para o planejamento de enriquecimento"""
    
    tasks = [
        {
            "id": "1",
            "title": "An√°lise e Valida√ß√£o da Estrutura das Tabelas",
            "description": "Verificar e documentar a estrutura atual das tabelas match_events, match_lineups e match_statistics",
            "status": "completed",
            "priority": "high",
            "dependencies": [],
            "details": """
            ‚úÖ CONCLU√çDO - An√°lise completa realizada em 17/09/2025
            
            Estruturas identificadas:
            - match_events: 20 campos (id, fixture_id, type_id, event_type, minute, etc.)
            - match_lineups: 26 campos (id, fixture_id, team_id, player_id, type, etc.)
            - match_statistics: 40+ campos (id, fixture_id, team_id, shots_total, etc.)
            
            Status atual:
            - match_events: 62.781 registros
            - match_lineups: 18.424 registros
            - match_statistics: 1.474 registros
            """,
            "testStrategy": "Verifica√ß√£o manual da estrutura via Supabase e documenta√ß√£o completa"
        },
        {
            "id": "2", 
            "title": "An√°lise Detalhada da API Sportmonks",
            "description": "Mapear campos dispon√≠veis na API Sportmonks para eventos, lineups e estat√≠sticas",
            "status": "completed",
            "priority": "high", 
            "dependencies": ["1"],
            "details": """
            ‚úÖ CONCLU√çDO - Mapeamento completo realizado em 17/09/2025
            
            API Endpoints analisados:
            - /fixtures/{id}?include=events
            - /fixtures/{id}?include=lineups  
            - /fixtures/{id}?include=statistics
            
            Campos identificados:
            - Events: 19 campos (id, type_id, participant_id, player_id, minute, etc.)
            - Lineups: 11 campos (id, team_id, player_id, type_id, position_id, etc.)
            - Statistics: 6 campos (id, type_id, participant_id, data, location, etc.)
            
            Mapeamento type_id para estat√≠sticas:
            - 41-54: Mapeados para campos espec√≠ficos (shots_total, yellow_cards, etc.)
            """,
            "testStrategy": "Teste com fixture espec√≠fica (18863344) validando estrutura completa"
        },
        {
            "id": "3",
            "title": "Defini√ß√£o do Mapeamento API ‚Üí Banco de Dados",
            "description": "Criar mapeamento detalhado entre campos da API e estrutura do banco",
            "status": "completed",
            "priority": "high",
            "dependencies": ["1", "2"],
            "details": """
            ‚úÖ CONCLU√çDO - Mapeamento validado em 17/09/2025
            
            MATCH_EVENTS:
            - participant_id ‚Üí team_id
            - addition ‚Üí event_type
            - sort_order ‚Üí sort_order
            - Campos removidos: var, var_reason, coordinates (n√£o dispon√≠veis na API)
            
            MATCH_LINEUPS:
            - type_id (11/12) ‚Üí type (lineup/substitute)
            - Campos removidos: campos de substitui√ß√£o detalhada (n√£o dispon√≠veis na API)
            
            MATCH_STATISTICS:
            - Agrupamento por team_id (participant_id)
            - Mapeamento type_id ‚Üí campos espec√≠ficos
            - Estrat√©gia: 1 registro por time com m√∫ltiplos campos
            """,
            "testStrategy": "Valida√ß√£o com fixture de teste mostrando mapeamento correto"
        },
        {
            "id": "4",
            "title": "Cria√ß√£o dos Scripts de Enriquecimento Otimizados",
            "description": "Desenvolver scripts otimizados para enriquecimento de cada tabela",
            "status": "completed",
            "priority": "high",
            "dependencies": ["3"],
            "details": """
            ‚úÖ CONCLU√çDO - Scripts criados em 17/09/2025
            
            Scripts desenvolvidos:
            - 20_events_enrichment.py: Enriquecimento de eventos
            - 20_lineups_enrichment.py: Enriquecimento de lineups
            - 20_statistics_enrichment.py: Enriquecimento de estat√≠sticas
            - 20_test_single_fixture.py: Valida√ß√£o de mapeamento
            
            Caracter√≠sticas:
            - Rate limiting: 1 req/segundo
            - Batch processing: 100 fixtures por lote
            - Upsert strategy: on_conflict='id'
            - Error handling completo
            - Logs detalhados
            """,
            "testStrategy": "Teste com fixture espec√≠fica validando inser√ß√£o correta"
        },
        {
            "id": "5",
            "title": "Valida√ß√£o do Mapeamento com Fixture de Teste",
            "description": "Testar mapeamento completo com uma fixture espec√≠fica",
            "status": "completed",
            "priority": "medium",
            "dependencies": ["4"],
            "details": """
            ‚úÖ CONCLU√çDO - Valida√ß√£o realizada em 17/09/2025
            
            Fixture testada: 18863344 (RB Leipzig vs Bayer 04 Leverkusen)
            
            Resultados:
            - Events: 19 eventos mapeados corretamente
            - Lineups: 40 lineups mapeados corretamente  
            - Statistics: 86 estat√≠sticas ‚Üí 2 registros agrupados por time
            
            Mapeamento validado:
            - Todos os campos da API mapeados corretamente
            - Estrat√©gia de agrupamento funcionando
            - IDs √∫nicos gerados corretamente
            """,
            "testStrategy": "Execu√ß√£o do script de teste com valida√ß√£o manual dos dados"
        },
        {
            "id": "6",
            "title": "Execu√ß√£o do Enriquecimento de Eventos",
            "description": "Executar enriquecimento completo da tabela match_events",
            "status": "in-progress",
            "priority": "high",
            "dependencies": ["5"],
            "details": """
            üîÑ EM ANDAMENTO - Iniciado em 17/09/2025
            
            Script: 20_events_enrichment.py
            Target: ~11.000 fixtures sem eventos
            
            Estimativas:
            - Fixtures: ~11.000
            - Eventos por fixture: ~19
            - Total esperado: ~209.000 eventos
            - Tempo estimado: ~18 minutos
            
            Status: Executando em background
            """,
            "testStrategy": "Monitoramento em tempo real e valida√ß√£o de inser√ß√£o"
        },
        {
            "id": "7",
            "title": "Execu√ß√£o do Enriquecimento de Lineups",
            "description": "Executar enriquecimento completo da tabela match_lineups",
            "status": "pending",
            "priority": "high",
            "dependencies": ["6"],
            "details": """
            ‚è≥ PENDENTE - Aguardando conclus√£o dos eventos
            
            Script: 20_lineups_enrichment.py
            Target: Fixtures sem lineups
            
            Estimativas:
            - Fixtures: ~11.000
            - Lineups por fixture: ~40
            - Total esperado: ~440.000 lineups
            - Tempo estimado: ~18 minutos
            
            Estrat√©gia: Executar ap√≥s conclus√£o dos eventos
            """,
            "testStrategy": "Execu√ß√£o sequencial ap√≥s valida√ß√£o dos eventos"
        },
        {
            "id": "8",
            "title": "Execu√ß√£o do Enriquecimento de Estat√≠sticas",
            "description": "Executar enriquecimento completo da tabela match_statistics",
            "status": "pending",
            "priority": "high",
            "dependencies": ["7"],
            "details": """
            ‚è≥ PENDENTE - Aguardando conclus√£o dos lineups
            
            Script: 20_statistics_enrichment.py
            Target: Fixtures sem estat√≠sticas
            
            Estimativas:
            - Fixtures: ~11.000
            - Estat√≠sticas por fixture: ~2 (1 por time)
            - Total esperado: ~22.000 estat√≠sticas
            - Tempo estimado: ~18 minutos
            
            Estrat√©gia: Executar ap√≥s conclus√£o dos lineups
            """,
            "testStrategy": "Execu√ß√£o sequencial ap√≥s valida√ß√£o dos lineups"
        },
        {
            "id": "9",
            "title": "Valida√ß√£o da Qualidade dos Dados Inseridos",
            "description": "Verificar qualidade e completude dos dados inseridos",
            "status": "pending",
            "priority": "medium",
            "dependencies": ["8"],
            "details": """
            ‚è≥ PENDENTE - Aguardando conclus√£o de todos os enriquecimentos
            
            Valida√ß√µes a realizar:
            - Contagem total de registros por tabela
            - Verifica√ß√£o de integridade referencial
            - An√°lise de cobertura por ano/liga
            - Valida√ß√£o de campos obrigat√≥rios
            - Verifica√ß√£o de duplicatas
            
            Relat√≥rios a gerar:
            - Status de enriquecimento por tabela
            - Cobertura temporal dos dados
            - An√°lise de qualidade dos dados
            """,
            "testStrategy": "Queries de valida√ß√£o e relat√≥rios de qualidade"
        },
        {
            "id": "10",
            "title": "An√°lise de Dados para Mercados de Cart√µes",
            "description": "Analisar dados enriquecidos focando em mercados de cart√µes",
            "status": "pending",
            "priority": "medium",
            "dependencies": ["9"],
            "details": """
            ‚è≥ PENDENTE - Aguardando valida√ß√£o dos dados
            
            An√°lises a realizar:
            - Frequ√™ncia de cart√µes amarelos/vermelhos por liga
            - Padr√µes de cart√µes por jogador/posi√ß√£o
            - Correla√ß√£o entre faltas e cart√µes
            - An√°lise temporal (minutos mais cr√≠ticos)
            - Compara√ß√£o entre times/ligas
            
            Dados importantes identificados:
            - Events: type_id para cart√µes, minute, player_id
            - Statistics: yellow_cards, red_cards por time
            - Lineups: posi√ß√µes dos jogadores que receberam cart√µes
            """,
            "testStrategy": "Queries anal√≠ticas e visualiza√ß√µes de dados"
        },
        {
            "id": "11",
            "title": "Documenta√ß√£o Final do Enriquecimento",
            "description": "Documentar processo completo e resultados obtidos",
            "status": "pending",
            "priority": "low",
            "dependencies": ["10"],
            "details": """
            ‚è≥ PENDENTE - Aguardando conclus√£o das an√°lises
            
            Documenta√ß√£o a criar:
            - Relat√≥rio final de enriquecimento
            - Estat√≠sticas de performance
            - Mapeamento final API ‚Üí Banco
            - Guia de uso dos dados para an√°lise
            - Recomenda√ß√µes para futuros enriquecimentos
            
            Arquivos a atualizar:
            - ENRICHMENT_FINAL_REPORT.md
            - API_MAPPING_GUIDE.md
            - DATA_QUALITY_REPORT.md
            """,
            "testStrategy": "Revis√£o completa da documenta√ß√£o e valida√ß√£o"
        },
        {
            "id": "12",
            "title": "Otimiza√ß√£o e Monitoramento Cont√≠nuo",
            "description": "Implementar monitoramento e otimiza√ß√µes para enriquecimentos futuros",
            "status": "pending",
            "priority": "low",
            "dependencies": ["11"],
            "details": """
            ‚è≥ PENDENTE - Aguardando documenta√ß√£o final
            
            Otimiza√ß√µes a implementar:
            - Sistema de monitoramento de qualidade
            - Alertas para dados incompletos
            - Otimiza√ß√£o de queries de an√°lise
            - Cache inteligente para consultas frequentes
            
            Monitoramento:
            - Dashboard de status das tabelas
            - Alertas de qualidade de dados
            - M√©tricas de performance da API
            - Relat√≥rios autom√°ticos de cobertura
            """,
            "testStrategy": "Implementa√ß√£o de dashboards e alertas"
        }
    ]
    
    return tasks

def save_tasks_to_file(tasks, file_path):
    """Salvar tasks no arquivo JSON do Task Master"""
    try:
        # Criar diret√≥rio se n√£o existir
        os.makedirs(os.path.dirname(file_path), exist_ok=True)
        
        # Salvar tasks
        with open(file_path, 'w', encoding='utf-8') as f:
            json.dump(tasks, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ Tasks salvas em: {file_path}")
        print(f"üìä Total de tasks: {len(tasks)}")
        
    except Exception as e:
        print(f"‚ùå Erro ao salvar tasks: {e}")

def main():
    """Fun√ß√£o principal"""
    print("üöÄ CRIANDO TASKS DETALHADAS PARA ENRIQUECIMENTO")
    print("=" * 60)
    
    # Criar tasks
    tasks = create_enrichment_tasks()
    
    # Caminho do arquivo de tasks
    tasks_file = Path('.taskmaster/tasks/tasks.json')
    
    # Salvar tasks
    save_tasks_to_file(tasks, tasks_file)
    
    # Mostrar resumo
    print("\nüìã RESUMO DAS TASKS CRIADAS:")
    print("=" * 40)
    
    status_counts = {}
    for task in tasks:
        status = task['status']
        status_counts[status] = status_counts.get(status, 0) + 1
    
    for status, count in status_counts.items():
        emoji = "‚úÖ" if status == "completed" else "üîÑ" if status == "in-progress" else "‚è≥"
        print(f"{emoji} {status.title()}: {count} tasks")
    
    print(f"\nüéØ PR√ìXIMAS A√á√ïES:")
    print("1. Verificar tasks no Task Master")
    print("2. Executar enriquecimento de lineups")
    print("3. Executar enriquecimento de estat√≠sticas")
    print("4. Validar qualidade dos dados")

if __name__ == "__main__":
    main()
