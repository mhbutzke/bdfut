#!/usr/bin/env python3
"""
Script de configura√ß√£o inicial do projeto BDFut
"""
import os
import sys
from pathlib import Path

def create_env_file():
    """Cria arquivo .env com configura√ß√µes b√°sicas"""
    
    env_template = """# ====================================
# CONFIGURA√á√ÉO SPORTMONKS API
# ====================================
# Obtenha sua API key em: https://www.sportmonks.com/
SPORTMONKS_API_KEY={sportmonks_key}
SPORTMONKS_BASE_URL=https://api.sportmonks.com/v3/football

# ====================================
# CONFIGURA√á√ÉO SUPABASE
# ====================================
# Obtenha essas informa√ß√µes no painel do seu projeto Supabase
# Dashboard > Settings > API
SUPABASE_URL={supabase_url}
SUPABASE_KEY={supabase_key}

# ====================================
# CONFIGURA√á√ïES DE ETL
# ====================================
RATE_LIMIT_PER_HOUR=3000
BATCH_SIZE=100
MAX_RETRIES=3
RETRY_DELAY=5
"""
    
    print("=" * 60)
    print("üöÄ CONFIGURA√á√ÉO INICIAL DO BDFUT")
    print("=" * 60)
    print()
    
    # Verificar se .env j√° existe
    if Path(".env").exists():
        response = input("‚ö†Ô∏è  Arquivo .env j√° existe. Deseja sobrescrever? (s/n): ")
        if response.lower() != 's':
            print("Configura√ß√£o cancelada.")
            return False
    
    print("Por favor, forne√ßa as seguintes informa√ß√µes:")
    print()
    
    # Coletar informa√ß√µes do Sportmonks
    print("1Ô∏è‚É£  SPORTMONKS API")
    print("   Acesse: https://www.sportmonks.com/")
    print("   Crie uma conta e obtenha sua API key")
    sportmonks_key = input("   Digite sua API key da Sportmonks: ").strip()
    
    if not sportmonks_key:
        print("‚ùå API key da Sportmonks √© obrigat√≥ria!")
        return False
    
    print()
    print("2Ô∏è‚É£  SUPABASE")
    print("   Acesse: https://supabase.com/dashboard")
    print("   Crie um projeto ou use um existente")
    print("   Em Settings > API, copie a URL e a chave anon")
    
    supabase_url = input("   Digite a URL do Supabase (ex: https://xyz.supabase.co): ").strip()
    supabase_key = input("   Digite a chave anon do Supabase: ").strip()
    
    if not supabase_url or not supabase_key:
        print("‚ùå URL e chave do Supabase s√£o obrigat√≥rias!")
        return False
    
    # Criar arquivo .env
    env_content = env_template.format(
        sportmonks_key=sportmonks_key,
        supabase_url=supabase_url,
        supabase_key=supabase_key
    )
    
    with open(".env", "w") as f:
        f.write(env_content)
    
    print()
    print("‚úÖ Arquivo .env criado com sucesso!")
    print()
    
    return True

def show_next_steps():
    """Mostra os pr√≥ximos passos ap√≥s configura√ß√£o"""
    
    print("=" * 60)
    print("üìã PR√ìXIMOS PASSOS")
    print("=" * 60)
    print()
    print("1. Execute a migra√ß√£o no Supabase:")
    print("   - Acesse o SQL Editor no painel do Supabase")
    print("   - Cole e execute o conte√∫do de: migrations/001_create_sportmonks_schema.sql")
    print()
    print("2. Teste a conex√£o:")
    print("   python3 main.py test-connection")
    print()
    print("3. Sincronize os dados base:")
    print("   python3 main.py sync-base")
    print()
    print("4. Sincronize as ligas principais:")
    print("   python3 main.py sync-leagues")
    print()
    print("5. Para sincroniza√ß√£o completa:")
    print("   python3 main.py full-sync")
    print()
    print("Para mais comandos, use: python3 main.py --help")
    print()
    print("=" * 60)

def main():
    """Fun√ß√£o principal"""
    
    # Verificar se est√° no diret√≥rio correto
    if not Path("main.py").exists():
        print("‚ùå Este script deve ser executado no diret√≥rio raiz do projeto BDFut")
        sys.exit(1)
    
    # Criar arquivo .env
    if create_env_file():
        show_next_steps()
        print("üéâ Configura√ß√£o conclu√≠da com sucesso!")
    else:
        print("‚ùå Configura√ß√£o n√£o foi conclu√≠da")
        sys.exit(1)

if __name__ == "__main__":
    main()
